=========================================
Import Declaration
=========================================

module A where

import Maybe
import Either()

---

(program
  (module
    (module_identifier)
    (module_body
      (import (constructor_identifier))
      (import
        (constructor_identifier)
        (import_specification)))))

=========================================
Import Declaration With Constructor
=========================================

module A where

import Data.Maybe (Maybe(..))

---

(program
  (module
    (module_identifier)
    (module_body
      (import
        (module_identifier)
        (import_specification (constructor_identifier))))))

=========================================
Import Declaration With Functions
=========================================

module A where

import Data.Maybe (fromMaybe, fromJust)

---

(program
  (module
    (module_identifier)
    (module_body
      (import
        (module_identifier)
        (import_specification (variable_identifier) (variable_identifier))))))

=========================================
Import Declaration With Constructor And Functions
=========================================

module A where

import Data.Maybe (Maybe(..), fromMaybe, fromJust)

---

(program
  (module
    (module_identifier)
    (module_body
      (import
        (module_identifier)
        (import_specification
          (constructor_identifier)
          (variable_identifier)
          (variable_identifier))))))

=========================================
Import Declaration With Qualified
=========================================

module A where

import qualified Data.Maybe
import qualified Either ()
import qualified Data.Function (fix)

---

(program
  (module
    (module_identifier)
    (module_body
      (import
        (module_identifier))
      (import
        (constructor_identifier)
        (import_specification))
      (import
        (module_identifier)
        (import_specification (variable_identifier))))))

=========================================
Import Declaration With Qualified, As
=========================================

module A where

import qualified Data.Maybe as DM
import qualified Either as E ()

---

(program
  (module
    (module_identifier)
    (module_body
      (import
        (module_identifier)
        (constructor_identifier))
      (import
        (constructor_identifier)
        (constructor_identifier)
        (import_specification)))))

=========================================
Import Declaration With As, Constructor And Function
=========================================

module A where

import Data.Maybe as DM (Maybe(..), fromMaybe)

---

(program
  (module
    (module_identifier)
    (module_body
      (import
        (module_identifier)
        (constructor_identifier)
        (import_specification
          (constructor_identifier)
          (variable_identifier))))))

=========================================
Import Declaration With Qualified, As, Constructor And Function
=========================================

module A where

import qualified Data.Maybe as M (Maybe(..), fromMaybe)

---

(program
  (module
    (module_identifier)
    (module_body
      (import
        (module_identifier)
        (constructor_identifier)
        (import_specification (constructor_identifier) (variable_identifier))))))

=========================================
Import Declaration With Hiding, Constructor and Function
=========================================

module A where

import Data.Maybe hiding (Maybe(..), fromMaybe)

---

(program
  (module
    (module_identifier)
    (module_body
      (import
        (module_identifier)
        (import_specification (constructor_identifier) (variable_identifier))))))

=========================================
Import Declaration With Qualified, Hiding, Constructor and Function
=========================================

module A where

import qualified Data.Maybe hiding ()
import qualified Data.Either hiding (Either(..), decodeEither)
import qualified Data.Function hiding (fix)
import qualified Data.List as DL hiding (head)

---

(program
  (module
    (module_identifier)
    (module_body
      (import
        (module_identifier)
        (import_specification))
      (import
        (module_identifier)
        (import_specification (constructor_identifier) (variable_identifier)))
      (import
        (module_identifier)
        (import_specification (variable_identifier)))
      (import
        (module_identifier)
        (constructor_identifier)
        (import_specification (variable_identifier))))))
